import moment from 'moment';
import { getExpMessage } from 'exp-react-localization';

/* Expects a moment.js parseable date string (pretty much anything)
 and returns the example formats, as currently defined by UX for ugc...
 Less than an hour = '34m'
 Less than or equal to 23 hours = '15h'
 More than 23 hours = 'Jan 5'
*/

const getFormattedElapsedTime = (dateOfPost) => {
  const creation = moment(dateOfPost);
  const now = moment();

  if (now.diff(creation, 'minutes') < 1) {
    return getExpMessage({
      defaultMessage: 'just now',
      messageKey: 'timeUtils.justNow',
      namespace: 'reactMessages',
    });
  }

  if (now.diff(creation, 'minutes') < 60) {
    const minutes = now.diff(creation, 'minutes');

    return getExpMessage({
      defaultMessage: '{minutes}m',
      messageKey: 'timeUtils.shortMinuteFormat',
      namespace: 'reactMessages',
      values: { minutes },
    });
  }

  if (now.diff(creation, 'hours') <= 23) {
    const hours = now.diff(creation, 'hours');

    return getExpMessage({
      defaultMessage: '{hours}h',
      messageKey: 'timeUtils.shortHourFormat',
      namespace: 'reactMessages',
      values: { hours },
    });
  }

  return creation.format('MMM D');
};

export default getFormattedElapsedTime;
