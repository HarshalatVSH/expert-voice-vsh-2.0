import React from 'react';
import PropTypes from 'prop-types';
import URI from 'urijs';

import ExpTruncate from 'exp-react-truncate';

import Image from './Image';

/**
 * Org Avatar Component
 */
const OrgAvatar = (props) => {
  const { alt, className, name, renderIfBroken, size, style, url, ...rest } = props;

  let src = url;
  if (src && size) {
    const uri = new URI(src);
    uri.setSearch('s', size ? `${size * 2}x${size * 2}` : null);
    src = uri.toString();
  }

  return (
    <Image
      alt={alt || name}
      className={className}
      renderIfBroken={renderIfBroken !== undefined // eslint-disable-line no-nested-ternary
        ? renderIfBroken
        : name || alt ? () => (
          <span
            className={`${className ? `${className} ` : ''}broken-image`}
            style={{ height: size, width: size }}
            title={name || alt}
            {...rest}
          >
            <ExpTruncate text={name || alt} delay={300} />
          </span>
        ) : undefined}
      src={src}
      style={{
        ...(style || {}),
        height: size,
        width: size,
      }}
      {...rest}
    />
  );
};

OrgAvatar.defaultProps = {
  alt: undefined,
  className: '',
  name: undefined,
  renderIfBroken: undefined,
  size: undefined,
  style: {},
};

OrgAvatar.propTypes = {
  alt: PropTypes.string,
  className: PropTypes.string,
  name: PropTypes.string,
  renderIfBroken: PropTypes.func,
  size: PropTypes.number,
  style: PropTypes.object,
  url: PropTypes.string.isRequired,
};

export default OrgAvatar;
