import React, { useState } from 'react';
import PropTypes from 'prop-types';

/**
 * Image component that is self-aware if it's broken
 */
const Image = React.forwardRef((props, ref) => {
  const { renderIfBroken, ...rest } = props;
  const [broken, setBroken] = useState(props.src ? undefined : true);

  if (broken && typeof renderIfBroken === 'function') {
    return renderIfBroken();
  }

  return (
    <img
      {...rest}
      alt={props.alt}
      data-broken={broken}
      onError={(e) => {
        setBroken(true);
        props.onError?.(e);
      }}
      ref={ref}
    />
  );
});

Image.defaultProps = {
  alt: undefined,
  onError: undefined,
  renderIfBroken: undefined,
  src: undefined,
};

Image.propTypes = {
  alt: PropTypes.string,
  onError: PropTypes.func,
  renderIfBroken: PropTypes.func,
  src: PropTypes.string,
};

export default Image;
