// Experticity Pattern Library
// Pattern Library Animations
// Loaded into core.less

.animate(@property: all) {
	.transition(@property @animation-speed @animation-easing);
}

.animate-slow(@property: all) {
	.transition(@property @animation-speed-slow @animation-easing);
}

.animate-fast(@property: all) {
	.transition(@property @animation-speed-fast @animation-easing);
}

// Animation Mix-ins
.animation(@animation) {
  animation: @animation;
}

.animation-name(@name) {
  animation-name: @name;
}

.animation-duration(@duration) {
  animation-duration: @duration;
}

.animation-timing-function(@timing-function) {
  animation-timing-function: @timing-function;
}

.animation-delay(@delay) {
  animation-delay: @delay;
}

.animation-iteration-count(@iteration-count) {
  animation-iteration-count: @iteration-count;
}

.animation-direction(@direction) {
  animation-direction: @direction;
}

.animation-fill-mode(@fill-mode) {
  animation-fill-mode: @fill-mode;
}

// Transitions
.transition(...) {
  transition: @arguments;
}

.transition-duration(@duration: 0.3s) {
  transition-duration: @duration;
}

.transition-delay(@delay: 0.3s) {
  transition-delay: @delay;
}

// Transformations
.transform(@transform) {
  transform: (@transform);
}

.rotate(@degrees) {
  transform: rotate(@degrees);
}

.scale(@ratio) {
  transform: scale(@ratio);
}

.translate(@x: 0, @y: 0) {
  transform: translate(@x, @y);
}

.skew(@x: 0, @y: 0) {
  transform: translate(@x, @y);
}

.skew(@x: 0, @y: 0) {
  transform: skew(@x, @y);
}

// Spin Animation Style
.exp-ux-spin {
  .animation(exp-ux-spin 2s infinite linear);
}

.exp-ux-pulse {
  .animation(exp-ux-spin 1s infinite steps(8));
}

// Spin Animations
@keyframes exp-ux-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(359deg);
  }
}

// Fade Element In, With Delay
.exp-ux-fade-in(@duration: 1s, @delay: 0) {
  .animation(exp-ux-fade-in @duration ease @delay forwards);
  opacity: 0;
}

@keyframes exp-ux-fade-in {
  from { opacity: 0; }
  to   { opacity: 1; }
}

// Fade Element Out, With Delay
.exp-ux-fade-out(@duration: 1s, @delay: 0) {
  .animation(exp-ux-fade-out @duration ease @delay forwards);
  opacity: 1;
}

@keyframes exp-ux-fade-out {
  from { opacity: 1; }
  to   { opacity: 0; }
}

// Shimmer effect, that lights up the background from top left to bottom right (configurable).
// Used for "skeleton", placeholder components that are shown while data is fetched.
// Add the .delay-n class to each subsequent element to create a cascading shimmer down the page.
.shimmer(@rotation: -30deg, @height: 200%, @width: 200%) {
  &:after {
    background: rgba(255, 255, 255, 0.13);
    background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0.13) 0%,
        rgba(255, 255, 255, 0.13) 77%,
        rgba(255, 255, 255, 0.5) 92%,
        rgba(255, 255, 255, 0.0) 100%
    );
    content: "";
    height: @height;
    opacity: 0;
    position: absolute;
    transform: rotate(@rotation);
    width: @width;

    animation: shimmer 5s 0.5s ease infinite, shimmer-opacity 5s 0.5s ease infinite;

    @keyframes shimmer {
      0% { top: -210%; left: -210%; }
      14% { top: -30%; left: -30%; }
      100% { top: -30%; left: -30%; }
    }

    @keyframes shimmer-opacity {
      0% { opacity: 0; }
      3% { opacity: 1; }
      100% { opacity: 1; }
    }
  }

  &.delay-1:after {
    animation-delay: 1.5s;
  }

  &.delay-2:after {
    animation-delay: 3s;
  }

  &.delay-3:after {
    animation-delay: 4.5s;
  }
}
